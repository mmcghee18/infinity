{"version":3,"sources":["images/boba_transparent.png","images/boba_green.png","images/boba_orange.png","images/boba_purple.png","images/boba_white.png","styles/styles.js","article-components/Header.jsx","article-components/textSteps.js","hooks/useChartDimensions.js","article-components/Counting/SameSizeSet.jsx","article-components/ScrollingProgression.jsx","App.js","index.js"],"names":["module","exports","GlobalStyle","createGlobalStyle","FullPageContainer","styled","div","ScrollamaWrapper","ContentWrapper","StepWrapper","SetImage","span","img","CurlyBrace","props","open","SetContainer","Header","href","style","display","alignItems","marginRight","textSteps","combineChartDimensions","dimensions","parsedDimensions","marginTop","marginBottom","marginLeft","boundedHeight","Math","max","height","boundedWidth","width","useChartDimensions","passedSettings","ref","useRef","useState","setWidth","setHeight","useEffect","element","current","resizeObserver","ResizeObserver","entries","Array","isArray","length","entry","contentRect","observe","unobserve","newSettings","SameSizeSet","items","bobaBrown","bobaGreen","bobaOrange","bobaPurple","bobaWhite","dms","firstX","map","imageSrc","i","key","src","alt","x1","y1","x2","y2","stroke","_","range","fontSize","textAlign","ScrollingProgression","setCurrentStep","onStepEnter","data","content","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6594d72e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/boba_transparent.f7423be0.png\";","module.exports = __webpack_public_path__ + \"static/media/boba_green.4609d4ff.png\";","module.exports = __webpack_public_path__ + \"static/media/boba_orange.fd5d31d0.png\";","module.exports = __webpack_public_path__ + \"static/media/boba_purple.c8e35f0c.png\";","module.exports = __webpack_public_path__ + \"static/media/boba_white.490ce916.png\";","import styled, { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    font-family: Rubik, sans-serif;\n    background-color: #b7e1ed;\n    color: #333333;\n  }\n`;\n\nexport const FullPageContainer = styled.div`\n  height: 92vh;\n  flex-direction: column;\n  align-items: center;\n  padding-left: 70px;\n  padding-right: 70px;\n  padding-top: 8vh;\n`;\n\nexport const ScrollamaWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: 70px;\n`;\n\nexport const ContentWrapper = styled.div`\n  position: sticky;\n  top: 100px;\n`;\n\nexport const StepWrapper = styled.div`\n  margin: 25vh 0;\n  width: 250px;\n`;\n\nexport const KeyboardKey = styled.span`\n  display: inline-block;\n  margin-left: 0.25em;\n  width: 1em;\n  height: 1.1em;\n  border: 1px solid #4a3d3e;\n  border-radius: 5px;\n  border-top: 0.5px solid #b2a1a3;\n  border-left: 1px solid #826b6d;\n  border-right: 1px solid #826b6d;\n  border-bottom: 3px solid #4a3d3e;\n  vertical-align: middle;\n  text-align: center;\n  transform: translateY(-12.5%);\n\n  &:last-child {\n    background-color: cornflowerblue;\n  }\n`;\n\nexport const SetImage = styled.img`\n  width: 100%;\n  height: auto;\n`;\n\nexport const CurlyBrace = styled.div`\n  font-size: 120px;\n  margin-left: ${(props) => (!props.open ? \"20px\" : null)};\n  margin-right: ${(props) => (props.open ? \"20px\" : null)};\n`;\n\nexport const SetContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n`;\n\nexport const Line = styled.div`\n  background: black;\n  height: 100px;\n  width: 5px;\n`;\n\nexport const ExplainerText = styled.div`\n  margin-bottom: 50px;\n  height: 4em;\n`;\n\nexport const TouchContainer = styled.div`\n  height: 100%;\n  width: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  pointer-events: all;\n  display: flex;\n`;\n\nexport const LeftTouch = styled.div`\n  width: 35%;\n  height: 100%;\n`;\n\nexport const RightTouch = styled.div`\n  width: 65%;\n  height: 100%;\n`;\n\nexport const WhiteText = styled.span`\n  background: white;\n`;\n","import React from \"react\";\nimport { FullPageContainer } from \"../styles/styles.js\";\nimport { useSpring, animated } from \"react-spring\";\nimport useKeyPress from \"../hooks/useKeyPress.js\";\n\nconst AnimatingInfinity = () => {\n  const props = useSpring({\n    config: { duration: 3000 },\n    x: 0,\n    from: { x: 200 },\n  });\n\n  return (\n    <animated.svg\n      strokeDasharray=\"200\"\n      strokeDashoffset={props.x}\n      width=\"400px\"\n      height=\"300px\"\n      viewBox=\"0 0 50 50\"\n    >\n      <path\n        stroke=\"cornflowerblue\"\n        fill=\"none\"\n        strokeWidth=\"4\"\n        d=\"M23.71 5.21l17.58 17.58a12.43 12.43 0 0 0 17.57 0 12.43 12.43 0 0 0 0-17.57 12.43 12.43 0 0 0-17.57 0L23.71 22.79a12.43 12.43 0 0 1-17.57 0 12.43 12.43 0 0 1 0-17.57 12.43 12.43 0 0 1 17.57-.01z\"\n        transform={\"translate(-7, 10)\"}\n      />\n    </animated.svg>\n  );\n};\n\nconst NumberLines = () => {\n  return (\n    <svg height=\"100\" width=\"500\">\n      <line x1=\"0\" y1=\"5\" x2=\"200\" y2=\"5\" stroke=\"black\"></line>\n      <line x1=\"0\" y1=\"50\" x2=\"400\" y2=\"50\" stroke=\"black\"></line>\n      <text x=\"0\" y=\"20\">\n        0\n      </text>\n      <text x=\"195\" y=\"20\">\n        1\n      </text>\n      <text x=\"0\" y=\"70\">\n        0\n      </text>\n      <text x=\"395\" y=\"70\">\n        2\n      </text>\n    </svg>\n  );\n};\n\nconst Header = () => {\n  return (\n    <FullPageContainer>\n      <div>\n        <h1>Counting Infinity</h1>\n        <p>\n          ~Infinity~ It's not a number, it's more of an idea. The idea of\n          something that is boundless, endless, larger than any number. Like the\n          number of digits of pi. Or the number of breadsticks you can order at\n          Olive Garden (not really).\n        </p>\n        <p>\n          We‚Äôre going to ask the question ‚Äúare some infinities bigger than other\n          infinities?‚Äù Turns out, the answer, like any good{\" \"}\n          <a href=\"#\">paradox</a>, is <strong>mind-bendingly absurd</strong> but\n          also (somehow) <strong>beautifully well-founded</strong>. (No fancy\n          math knowledge required - if you know how to count, you're ready to\n          go!)\n        </p>\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n          <p style={{ marginRight: \"20px\" }}>Let's dive in!</p>\n        </div>\n      </div>\n    </FullPageContainer>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst textSteps = [\n  <p>\n    To start, let's talk about <strong>counting</strong> ‚úãüèΩ\n  </p>,\n  <p>\n    When we say we have 5 bobas, it means we have one for every number from 1 to\n    5.\n  </p>,\n  <p>\n    These are sets. They're just collections of distinct objects, they can\n    contain anything (numbers, boba drinks, Jacob Collier albums, other sets)!\n  </p>,\n  <>\n    <p>\n      We say 2 sets are the same size if you can draw a line between every\n      element without leaving any elements uncovered.\n    </p>\n    <p>\n      <strong>These sets are the same size!</strong>\n    </p>\n  </>,\n  <p>But these ones aren't. Someone's missing a buddy!</p>,\n];\n\nexport default textSteps;\n","import { ResizeObserver } from \"@juggle/resize-observer\";\nimport { useRef, useState, useEffect } from \"react\";\n\nconst combineChartDimensions = (dimensions) => {\n  const parsedDimensions = {\n    ...dimensions,\n    marginTop: dimensions.marginTop || 0,\n    marginRight: dimensions.marginRight || 0,\n    marginBottom: dimensions.marginBottom || 0,\n    marginLeft: dimensions.marginLeft || 0,\n  };\n  return {\n    ...parsedDimensions,\n    boundedHeight: Math.max(\n      parsedDimensions.height -\n        parsedDimensions.marginTop -\n        parsedDimensions.marginBottom,\n      0\n    ),\n    boundedWidth: Math.max(\n      parsedDimensions.width -\n        parsedDimensions.marginLeft -\n        parsedDimensions.marginRight,\n      0\n    ),\n  };\n};\n\nconst useChartDimensions = (passedSettings) => {\n  const ref = useRef();\n  const dimensions = combineChartDimensions(passedSettings);\n  const [width, setWidth] = useState(0);\n  const [height, setHeight] = useState(0);\n\n  useEffect(() => {\n    //if (dimensions.width && dimensions.height) return [ref, dimensions];\n    const element = ref.current;\n    const resizeObserver = new ResizeObserver((entries) => {\n      if (!Array.isArray(entries)) return;\n      if (!entries.length) return;\n      const entry = entries[0];\n      if (width != entry.contentRect.width) setWidth(entry.contentRect.width);\n      if (height != entry.contentRect.height)\n        setHeight(entry.contentRect.height);\n    });\n    resizeObserver.observe(element);\n    return () => resizeObserver.unobserve(element);\n  }, []);\n\n  const newSettings = combineChartDimensions({\n    ...dimensions,\n    width: dimensions.width || width,\n    height: dimensions.height || height,\n  });\n  return [ref, newSettings];\n};\n\nexport default useChartDimensions;\n","import React from \"react\";\nimport bobaBrown from \"../../images/boba_transparent.png\";\nimport bobaGreen from \"../../images/boba_green.png\";\nimport bobaOrange from \"../../images/boba_orange.png\";\nimport bobaPurple from \"../../images/boba_purple.png\";\nimport bobaWhite from \"../../images/boba_white.png\";\nimport {\n  FullPageContainer,\n  SetImage,\n  CurlyBrace,\n  SetContainer,\n  Line,\n  ExplainerText,\n} from \"../../styles/styles.js\";\nimport useChartDimensions from \"../../hooks/useChartDimensions.js\";\nimport _ from \"lodash\";\n\nconst SameSizeSet = () => {\n  const items = [bobaBrown, bobaGreen, bobaOrange, bobaPurple, bobaWhite];\n\n  const chartSettings = {};\n  const [ref, dms] = useChartDimensions(chartSettings);\n\n  const firstX = (dms.width - 120) / 5;\n\n  return (\n    <div style={{ width: \"100%\" }}>\n      {/* Set of boba */}\n      <SetContainer>\n        <CurlyBrace>{\"{\"}</CurlyBrace>\n        {items.map((imageSrc, i) => (\n          <div key={i} style={{ width: \"18%\" }}>\n            <SetImage key={i} src={imageSrc} alt={`boba-${i}`} />\n          </div>\n        ))}\n        <CurlyBrace>{\"}\"}</CurlyBrace>\n      </SetContainer>\n\n      {/* Counting lines */}\n      <div ref={ref} style={{ height: \"200px\", width: \"100%\" }}>\n        <svg height={dms.height} width={dms.width}>\n          <g>\n            <line x1={firstX} y1={0} x2={firstX} y2={200} stroke=\"black\"></line>\n          </g>\n        </svg>\n      </div>\n\n      {/* Set of numbers */}\n      <SetContainer>\n        <CurlyBrace>{\"{\"}</CurlyBrace>\n        {_.range(1, 6).map((i) => (\n          <div\n            key={i}\n            style={{ width: \"18%\", fontSize: \"60px\", textAlign: \"center\" }}\n          >\n            {i}\n          </div>\n        ))}\n        <CurlyBrace>{\"}\"}</CurlyBrace>\n      </SetContainer>\n    </div>\n  );\n};\n\nexport default SameSizeSet;\n","import React, { useState, useEffect } from \"react\";\nimport { Scrollama, Step } from \"react-scrollama\";\nimport {\n  ScrollamaWrapper,\n  ContentWrapper,\n  StepWrapper,\n} from \"../styles/styles.js\";\nimport _ from \"lodash\";\nimport textSteps from \"./textSteps.js\";\nimport SameSizeSet from \"./Counting/SameSizeSet.jsx\";\n\nconst ScrollingProgression = () => {\n  const [currentStep, setCurrentStep] = useState(null);\n\n  const onStepEnter = ({ data }) => {\n    setCurrentStep(data);\n  };\n\n  return (\n    <div style={{ display: \"flex\" }}>\n      <ScrollamaWrapper>\n        <Scrollama onStepEnter={onStepEnter}>\n          {textSteps.map((content, i) => (\n            <Step data={i} key={i}>\n              <StepWrapper>{content}</StepWrapper>\n            </Step>\n          ))}\n        </Scrollama>\n      </ScrollamaWrapper>\n\n      <div>\n        <ContentWrapper>\n          <SameSizeSet />\n        </ContentWrapper>\n      </div>\n    </div>\n  );\n};\n\nexport default ScrollingProgression;\n","import React from \"react\";\nimport Header from \"./article-components/Header.jsx\";\nimport ScrollingProgression from \"./article-components/ScrollingProgression.jsx\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <ScrollingProgression />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { GlobalStyle } from \"./styles/styles.js\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    <GlobalStyle />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}