{"version":3,"sources":["images/boba_transparent.png","images/boba_green.png","images/boba_orange.png","images/boba_purple.png","images/boba_white.png","images/djesse1.jpg","images/djesse2.jpg","images/djesse3.jpg","styles/styles.js","hooks/useKeyPress.js","article-components/Header.jsx","article-components/Counting/SameSizeSet.jsx","article-components/Counting/DifferentSizeSet.jsx","article-components/Counting.jsx","App.js","index.js"],"names":["module","exports","GlobalStyle","createGlobalStyle","FullPageContainer","styled","div","KeyboardKey","span","SetImage","img","CurlyBrace","props","open","SetContainer","Line","ExplainerText","useKeyPress","targetKey","useState","keyPressed","setKeyPressed","downHandler","key","upHandler","useEffect","window","addEventListener","removeEventListener","Header","currentPage","setCurrentPage","leftPress","rightPress","href","style","display","alignItems","marginRight","SameSizeSet","currentStep","items","bobaBrown","bobaGreen","bobaOrange","bobaPurple","bobaWhite","map","imageSrc","i","width","src","alt","visibility","_","range","justifyContent","fontSize","textAlign","DifferentSizeSet","items1","items2","djesse1","djesse2","djesse3","marginBottom","className","textSteps","Counting","setCurrentStep","numSteps","length","text","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0fce45e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/boba_transparent.f7423be0.png\";","module.exports = __webpack_public_path__ + \"static/media/boba_green.4609d4ff.png\";","module.exports = __webpack_public_path__ + \"static/media/boba_orange.fd5d31d0.png\";","module.exports = __webpack_public_path__ + \"static/media/boba_purple.c8e35f0c.png\";","module.exports = __webpack_public_path__ + \"static/media/boba_white.490ce916.png\";","module.exports = __webpack_public_path__ + \"static/media/djesse1.0ffbf3b0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/djesse2.e6d2aa7d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/djesse3.62c7a9a0.jpg\";","import styled, { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    font-family: Rubik, sans-serif;\n    background-color: white;\n    color: black;\n  }\n`;\n\nexport const FullPageContainer = styled.div`\n  height: 92vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-left: 50px;\n  padding-right: 50px;\n  padding-top: 8vh;\n`;\n\nexport const KeyboardKey = styled.span`\n  display: inline-block;\n  margin-left: 0.25em;\n  width: 1em;\n  height: 1.1em;\n  border: 1px solid #4a3d3e;\n  border-radius: 5px;\n  border-top: 0.5px solid #b2a1a3;\n  border-left: 1px solid #826b6d;\n  border-right: 1px solid #826b6d;\n  border-bottom: 3px solid #4a3d3e;\n  vertical-align: middle;\n  text-align: center;\n  transform: translateY(-12.5%);\n\n  &:last-child {\n    background-color: cornflowerblue;\n  }\n`;\n\nexport const SetImage = styled.img`\n  width: 100%;\n  height: auto;\n`;\n\nexport const CurlyBrace = styled.div`\n  font-size: 120px;\n  margin-left: ${(props) => (!props.open ? \"20px\" : null)};\n  margin-right: ${(props) => (props.open ? \"20px\" : null)};\n`;\n\nexport const SetContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n`;\n\nexport const Line = styled.div`\n  background: black;\n  height: 100px;\n  width: 5px;\n`;\n\nexport const ExplainerText = styled.div`\n  margin-bottom: 50px;\n  height: 4em;\n`;\n","import React, { useState, useEffect } from \"react\";\n\nconst useKeyPress = (targetKey) => {\n  // State for keeping track of whether key is pressed\n  const [keyPressed, setKeyPressed] = useState(false);\n\n  // If pressed key is our target key then set to true\n  function downHandler({ key }) {\n    if (key === targetKey) {\n      setKeyPressed(true);\n    }\n  }\n\n  // If released key is our target key then set to false\n  const upHandler = ({ key }) => {\n    if (key === targetKey) {\n      setKeyPressed(false);\n    }\n  };\n\n  // Add event listeners\n  useEffect(() => {\n    window.addEventListener(\"keydown\", downHandler);\n    window.addEventListener(\"keyup\", upHandler);\n    // Remove event listeners on cleanup\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  }, []); // Empty array ensures that effect is only run on mount and unmount\n\n  return keyPressed;\n};\n\nexport default useKeyPress;\n","import React, { useState, useEffect } from \"react\";\nimport { FullPageContainer, KeyboardKey } from \"../styles/styles.js\";\nimport { useSpring, animated } from \"react-spring\";\nimport useKeyPress from \"../hooks/useKeyPress.js\";\n\nconst AnimatingInfinity = () => {\n  const props = useSpring({\n    config: { duration: 3000 },\n    x: 0,\n    from: { x: 200 },\n  });\n\n  return (\n    <animated.svg\n      strokeDasharray=\"200\"\n      strokeDashoffset={props.x}\n      width=\"400px\"\n      height=\"300px\"\n      viewBox=\"0 0 50 50\"\n    >\n      <path\n        stroke=\"cornflowerblue\"\n        fill=\"none\"\n        strokeWidth=\"4\"\n        d=\"M23.71 5.21l17.58 17.58a12.43 12.43 0 0 0 17.57 0 12.43 12.43 0 0 0 0-17.57 12.43 12.43 0 0 0-17.57 0L23.71 22.79a12.43 12.43 0 0 1-17.57 0 12.43 12.43 0 0 1 0-17.57 12.43 12.43 0 0 1 17.57-.01z\"\n        transform={\"translate(-7, 10)\"}\n      />\n    </animated.svg>\n  );\n};\n\nconst NumberLines = () => {\n  return (\n    <svg height=\"100\" width=\"500\">\n      <line x1=\"0\" y1=\"5\" x2=\"200\" y2=\"5\" stroke=\"black\"></line>\n      <line x1=\"0\" y1=\"50\" x2=\"400\" y2=\"50\" stroke=\"black\"></line>\n      <text x=\"0\" y=\"20\">\n        0\n      </text>\n      <text x=\"195\" y=\"20\">\n        1\n      </text>\n      <text x=\"0\" y=\"70\">\n        0\n      </text>\n      <text x=\"395\" y=\"70\">\n        2\n      </text>\n    </svg>\n  );\n};\n\nconst Header = ({ currentPage, setCurrentPage }) => {\n  const leftPress = useKeyPress(\"ArrowLeft\");\n  const rightPress = useKeyPress(\"ArrowRight\");\n\n  useEffect(() => {\n    if (rightPress) setCurrentPage(currentPage + 1);\n  }, [leftPress, rightPress]);\n\n  return (\n    <FullPageContainer>\n      <div>\n        <h1>Counting Infinity</h1>\n        {/* <p>\n          A paradox is a statement that's either self-contradictory or goes\n          against what we intuitively expect.\n        </p>\n        <p>\n          A paradox is something that either seems true, but isn't OR seems\n          crazy but is true.\n        </p> */}\n\n        {/* <p>\n          Like if I told you that my barber only shaves people who don’t shave\n          themselves. Seems fine. But does he shave himself? Huh. If he shaves\n          himself, that's a problem, because he would be shaving someone who\n          shaves themself. But if he doesn't, he's someone who the barber\n          shaves, so he must shave himself. Confused? Same.\n        </p> */}\n        <p>\n          Infinity. It's not a number, but rather the idea of something that is\n          boundless, endless, larger than any number. Like the number of digits\n          of pi. Or the number of breadsticks you can order at Olive Garden (not\n          really).\n        </p>\n        <p>\n          We’re going to ask the question “are some infinities bigger than other\n          infinities?” Turns out, the answer, like any good{\" \"}\n          <a href=\"#\">paradox</a>, is <strong>mind-bendingly absurd</strong> but\n          also (somehow) <strong>beautifully well-founded</strong>. (No fancy\n          math knowledge required - if you know how to count, you're ready to\n          go!)\n        </p>\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n          <p style={{ marginRight: \"20px\" }}>\n            Let's dive in! You can use the arrow keys to advance the story.\n          </p>\n          <KeyboardKey>{\"<\"}</KeyboardKey>\n          <KeyboardKey>{\">\"}</KeyboardKey>\n        </div>\n      </div>\n    </FullPageContainer>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport bobaBrown from \"../../images/boba_transparent.png\";\nimport bobaGreen from \"../../images/boba_green.png\";\nimport bobaOrange from \"../../images/boba_orange.png\";\nimport bobaPurple from \"../../images/boba_purple.png\";\nimport bobaWhite from \"../../images/boba_white.png\";\nimport {\n  FullPageContainer,\n  SetImage,\n  CurlyBrace,\n  SetContainer,\n  Line,\n  ExplainerText,\n} from \"../../styles/styles.js\";\nimport _ from \"lodash\";\n\nconst SameSizeSet = ({ currentStep }) => {\n  const items = [bobaBrown, bobaGreen, bobaOrange, bobaPurple, bobaWhite];\n\n  return (\n    <div>\n      {/* Set of boba */}\n      <SetContainer>\n        <CurlyBrace>{\"{\"}</CurlyBrace>\n        {items.map((imageSrc, i) => (\n          <div key={i} style={{ width: \"14vw\" }}>\n            <SetImage key={i} src={imageSrc} alt={`boba-${i}`} />\n          </div>\n        ))}\n        <CurlyBrace>{\"}\"}</CurlyBrace>\n      </SetContainer>\n\n      {/* Counting lines */}\n      {currentStep > 0 && (\n        <SetContainer>\n          <CurlyBrace style={{ visibility: \"hidden\" }}>{\"{\"}</CurlyBrace>\n          {_.range(1, 6).map((i) => (\n            <div\n              key={i}\n              style={{\n                width: \"14vw\",\n                display: \"flex\",\n                justifyContent: \"center\",\n              }}\n            >\n              <Line key={i} />\n            </div>\n          ))}\n          <CurlyBrace style={{ visibility: \"hidden\" }}>{\"}\"}</CurlyBrace>\n        </SetContainer>\n      )}\n\n      {/* Set of numbers */}\n      {currentStep > 0 && (\n        <SetContainer>\n          <CurlyBrace>{\"{\"}</CurlyBrace>\n          {_.range(1, 6).map((i) => (\n            <div\n              key={i}\n              style={{ width: \"14vw\", fontSize: \"60px\", textAlign: \"center\" }}\n            >\n              {i}\n            </div>\n          ))}\n          <CurlyBrace>{\"}\"}</CurlyBrace>\n        </SetContainer>\n      )}\n    </div>\n  );\n};\n\nexport default SameSizeSet;\n","import React from \"react\";\nimport bobaBrown from \"../../images/boba_transparent.png\";\nimport bobaGreen from \"../../images/boba_green.png\";\nimport bobaOrange from \"../../images/boba_orange.png\";\nimport bobaPurple from \"../../images/boba_purple.png\";\nimport bobaWhite from \"../../images/boba_white.png\";\nimport djesse1 from \"../../images/djesse1.jpg\";\nimport djesse2 from \"../../images/djesse2.jpg\";\nimport djesse3 from \"../../images/djesse3.jpg\";\nimport {\n  FullPageContainer,\n  SetImage,\n  CurlyBrace,\n  SetContainer,\n  Line,\n  ExplainerText,\n} from \"../../styles/styles.js\";\n\nconst DifferentSizeSet = ({ currentStep }) => {\n  const items1 = [bobaBrown, bobaGreen, bobaOrange, bobaPurple, bobaWhite];\n  const items2 = [djesse1, djesse2, djesse3];\n\n  return (\n    <div>\n      {/* Set of boba */}\n      <SetContainer style={{ marginBottom: \"150px\" }}>\n        <CurlyBrace>{\"{\"}</CurlyBrace>\n        {items1.map((imageSrc, i) => (\n          <div key={i} style={{ width: \"14vw\" }} className={`set1-item${i}`}>\n            <SetImage key={i} src={imageSrc} alt={`boba-${i}`} />\n          </div>\n        ))}\n        <CurlyBrace>{\"}\"}</CurlyBrace>\n      </SetContainer>\n\n      {/* Set of JC albums */}\n      <SetContainer>\n        <CurlyBrace open={true}>{\"{\"}</CurlyBrace>\n        {items2.map((imageSrc, i) => (\n          <div\n            key={i}\n            style={{ width: \"14vw\", marginRight: i === 2 ? null : \"14vw\" }}\n            className={`set2-item${i}`}\n          >\n            <SetImage key={i} src={imageSrc} alt={`boba-${i}`} />\n          </div>\n        ))}\n        <CurlyBrace open={false}>{\"}\"}</CurlyBrace>\n      </SetContainer>\n    </div>\n  );\n};\n\nexport default DifferentSizeSet;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  FullPageContainer,\n  SetImage,\n  CurlyBrace,\n  SetContainer,\n  Line,\n  ExplainerText,\n} from \"../styles/styles.js\";\nimport useKeyPress from \"../hooks/useKeyPress.js\";\nimport SameSizeSet from \"./Counting/SameSizeSet.jsx\";\nimport DifferentSizeSet from \"./Counting/DifferentSizeSet.jsx\";\nimport _ from \"lodash\";\n\nconst textSteps = [\n  <p>\n    To start, let's talk about <strong>counting</strong> ✋🏽\n  </p>,\n  <p>\n    When we say we have 5 bobas, it means we have one for every number from 1 to\n    5.\n  </p>,\n  <p>\n    These are sets. They're just collections of distinct objects, they can\n    contain anything (numbers, boba drinks, Jacob Collier albums, other sets)!\n  </p>,\n  <>\n    <p>\n      We say 2 sets are the same size if you can draw a line between every\n      element without leaving any elements uncovered.\n    </p>\n    <p>\n      <strong>These sets are the same size!</strong>\n    </p>\n  </>,\n  <p>But these ones aren't. Someone's missing a buddy!</p>,\n];\n\nconst Counting = ({ currentPage, setCurrentPage }) => {\n  const [currentStep, setCurrentStep] = useState(0);\n  const numSteps = textSteps.length;\n\n  const leftPress = useKeyPress(\"ArrowLeft\");\n  const rightPress = useKeyPress(\"ArrowRight\");\n\n  useEffect(() => {\n    if (leftPress) {\n      if (currentStep - 1 >= 0) setCurrentStep(currentStep - 1);\n      if (currentStep === 0) setCurrentPage(currentPage - 1);\n    }\n    if (rightPress) {\n      if (currentStep + 1 < numSteps) setCurrentStep(currentStep + 1);\n    }\n  }, [leftPress, rightPress]);\n\n  return (\n    <FullPageContainer>\n      <ExplainerText>\n        {textSteps.map((text, i) => currentStep === i && text)}\n      </ExplainerText>\n      {currentStep < 4 && <SameSizeSet currentStep={currentStep} />}\n      {currentStep >= 4 && <DifferentSizeSet currentStep={currentStep} />}\n    </FullPageContainer>\n  );\n};\n\nexport default Counting;\n","import React, { useState, useEffect } from \"react\";\nimport Header from \"./article-components/Header.jsx\";\nimport Counting from \"./article-components/Counting.jsx\";\nimport useKeyPress from \"./hooks/useKeyPress.js\";\n\nfunction App() {\n  const [currentPage, setCurrentPage] = useState(1);\n  // const numPages = 2;\n\n  // const leftPress = useKeyPress(\"ArrowLeft\");\n  // const rightPress = useKeyPress(\"ArrowRight\");\n\n  // useEffect(() => {\n  //   if (leftPress) {\n  //     if (currentPage - 1 >= 0) setCurrentPage(currentPage - 1);\n  //   }\n  //   if (rightPress) {\n  //     if (currentPage + 1 < numPages) setCurrentPage(currentPage + 1);\n  //   }\n  // }, [leftPress, rightPress]);\n\n  return (\n    <div className=\"App\">\n      {currentPage === 0 && (\n        <Header currentPage={currentPage} setCurrentPage={setCurrentPage} />\n      )}\n      {currentPage === 1 && (\n        <Counting currentPage={currentPage} setCurrentPage={setCurrentPage} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { GlobalStyle } from \"./styles/styles.js\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    <GlobalStyle />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}